{"mappings":"A,I,E,Q,yBCGA,MAAM,EAAW,AAAA,CAAA,EAAA,EAAA,qBAAoB,AAApB,EAAsB,CACnC,OAAQ,0BACR,aAAc,CAAA,EACd,YAAa,CACT,WAAY,EAChB,EACA,WAAW,CAAQ,EACf,EAAS,OAAO,CAAC,IAAO,CAAG,iBAAmB,8BAA6B;AAC/E,CACJ,GAEA,eAAe,EAAQ,CAAkB,CAAE,CAAmB,EAE1D,mBAAmB;AACnB,OAFA,EAAI,OAAO,CAAC,IAAO,CAAG,kBAEf,EAAS,EAAK,EACzB,CAEA,OAAA,OAAA,CAAiB,C,mC","sources":["<anon>","api-src/src/ingest.ts"],"sourcesContent":["var $kBLhg$httpproxymiddleware = require(\"http-proxy-middleware\");\n\n\nconst $74e055f10abdfd68$var$apiProxy = (0, $kBLhg$httpproxymiddleware.createProxyMiddleware)({\n    target: \"https://app.posthog.com\",\n    changeOrigin: true,\n    pathRewrite: {\n        \"^/ingest\": \"\"\n    },\n    onProxyRes (proxyRes) {\n        proxyRes.headers[\"Host\"] = \"app.posthog.com\"; // add new header to response\n    }\n});\nasync function $74e055f10abdfd68$var$handler(req, res) {\n    req.headers[\"host\"] = \"app.posthog.com\";\n    // @ts-expect-error\n    return $74e055f10abdfd68$var$apiProxy(req, res);\n}\nmodule.exports = $74e055f10abdfd68$var$handler;\n\n\n//# sourceMappingURL=ingest.js.map\n","import type { VercelRequest, VercelResponse } from \"@vercel/node\";\nimport { createProxyMiddleware } from \"http-proxy-middleware\";\n\nconst apiProxy = createProxyMiddleware({\n    target: \"https://app.posthog.com\",\n    changeOrigin: true,\n    pathRewrite: {\n        \"^/ingest\": \"\", // strip \"/api\" from the URL\n    },\n    onProxyRes(proxyRes) {\n        proxyRes.headers[\"Host\"] = \"app.posthog.com\"; // add new header to response\n    },\n});\n\nasync function handler(req: VercelRequest, res: VercelResponse): Promise<any> {\n    req.headers[\"host\"] = \"app.posthog.com\";\n    // @ts-expect-error\n    return apiProxy(req, res);\n}\n\nmodule.exports = handler;\n"],"names":["$kBLhg$httpproxymiddleware","require","$74e055f10abdfd68$var$apiProxy","createProxyMiddleware","target","changeOrigin","pathRewrite","onProxyRes","proxyRes","headers","$74e055f10abdfd68$var$handler","req","res","module","exports"],"version":3,"file":"ingest.js.map","sourceRoot":"../"}